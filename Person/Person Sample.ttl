@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix ceds: <http://ceds.ed.gov/terms#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

ceds:PersonShape
    a sh:NodeShape;
    sh:targetClass ceds:Person;  #C200275
    sh:closed true;
    sh:ignoredProperties (rdf:type rdf:id rdf:value rdfs:label);
    sh:property[
        sh:path ceds:PersonName;
        sh:node ceds:PersonNameShape;
        sh:minCount 1;
        sh:maxCount 1;
    ];
    sh:property[
        sh:path ceds:PersonOtherName;
        sh:node ceds:PersonOtherNameShape;
    ];
    sh:property[
        sh:path ceds:PersonIdentifier;
        sh:node ceds:PersonIdentifierShape;
        sh:minCount 1;
        sh:maxCount 1;
    ];
    sh:property[
        sh:path ceds:PersonBirthDate;
        sh:node ceds:PersonBirthDateShape;
        sh:maxCount 1;
    ];
    sh:property[
        sh:path ceds:PersonDemographicRace;
        sh:node ceds:PersonDemographicRaceShape;
    ];
    sh:property[
        sh:path ceds:PersonSexGender;
        sh:node ceds:PersonSexGenderShape;
    ]
.

##### PersonNameShape
ceds:PersonNameShape
    a sh:NodeShape;
    sh:targetClass ceds:PersonName; #C200377
    sh:closed true;
    sh:ignoredProperties (rdf:type rdf:id rdf:value rdfs:label);
##### Data Elements
    sh:property[
        sh:path ceds:FirstName; #P000115
        sh:datatype xsd:string;
        sh:name "First Name";
        sh:description "The full legal first name given to a person at birth, baptism, or through legal change.";
        ##### Validation Logic
        sh:minCount 1;
        sh:maxCount 1;
        sh:maxLength 75;
    ];
    sh:property[
        sh:path ceds:MiddleName;    #P000184
        sh:datatype xsd:string;
        sh:name "Middle Name";
        sh:description "A full legal middle name given to a person at birth, baptism, or through legal change.";
        ##### Validation Logic
        sh:maxCount 1;
        sh:maxLength 75;
    ];
    sh:property[
        sh:path ceds:LastOrSurname;    #P000172
        sh:datatype xsd:string;
        sh:name "Last Or Surname";
        sh:description "The full legal last name borne in common by members of a family.";
        ##### Validation Logic
        sh:minCount 1;
        sh:maxCount 1;
        sh:maxLength 75;
    ];
.

ceds:PersonOtherNameShape
    a sh:NodeShape;
    sh:targetClass ceds:PersonOtherName;  #C200304
    sh:closed true;
    sh:ignoredProperties (rdf:type rdf:id rdf:value rdfs:label);
    sh:property[
        sh:path ceds:OtherNameType; #C000634/P000634
        sh:datatype xsd:string;
        sh:name "Other Name Type";
        sh:description "The types of previous, alternate or other names for a person.";
        ##### Validation Logic
        sh:maxCount 1;
        #what is preferred way to reference a set inside of a shape ???
        sh:in("Alias" "Nickname" "Other Name" "Previous Legal Name" "Preferred Family Name" "Full Name");
    ];
    sh:property[
        sh:path ceds:OtherFirstName;        #P001514
        sh:datatype xsd:string;
        sh:name "Other First Name";
        sh:description "A first name given to a person.";
        ##### Validation Logic
        sh:minCount 1;
        sh:maxCount 1;
        sh:maxLength 35;
    ];
    sh:property[
        sh:path ceds:OtherMiddleName;       #P001515
        sh:datatype xsd:string;
        sh:name "Other Middle Name";
        sh:description "A middle name given to a person.";
        ##### Validation Logic
        sh:maxCount 1;
        sh:maxLength 35;
    ];
    sh:property[
        sh:path ceds:OtherLastName;     #P001513
        sh:datatype xsd:string;
        sh:name "Other Last Name";
        sh:description "A last name given to a person.";
        ##### Validation Logic
        sh:minCount 1;
        sh:maxCount 1;
        sh:maxLength 35;
    ];
.

##### PersonIdentifierShape
ceds:PersonIdentifierShape
    a sh:NodeShape;
    sh:targetClass ceds:PersonIdentifier;   #C200291
    sh:closed true;
    sh:ignoredProperties (rdf:type rdf:id rdf:value rdfs:label);
##### Data Elements
    sh:property[
        sh:path ceds:StaffMemberIdentifier; #P001070
        sh:datatype xsd:string;
        sh:name "Staff Member Identifier";
        sh:description "A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, registry, or other agency or entity.";
        ##### Validation Logic
        sh:maxCount 1;
        sh:maxLength 40;
    ];
    sh:property[
        sh:path ceds:StudentIdentifier; #P001071
        sh:datatype xsd:string;
        sh:name "Student Identifier";
        sh:description "A unique number or alphanumeric code assigned to a student by a school, school system, a state, or other agency or entity.";
        ##### Validation Logic
        sh:maxCount 1;
        sh:maxLength 40;
    ];
    sh:property[
        sh:path ceds:ChildIdentifier;   #P001080
        sh:datatype xsd:string;
        sh:name "Child Identifier";
        sh:description "A unique number or alphanumeric code assigned to a child by a school, school system, a state, or other agency or entity.";
        ##### Validation Logic
        sh:maxCount 1;
        sh:maxLength 40;
    ];
    sh:property[
        sh:path ceds:PersonIdentifier;  #P001444
        sh:datatype xsd:string;
        sh:name "Person Identifier";
        sh:description "A unique number or alphanumeric code assigned to a child by a school, school system, a state, or other agency or entity.";
        ##### Validation Logic
        sh:maxCount 1;
        sh:maxLength 40;
    ];
.

##### PersonBirthDateShape
ceds:PersonBirthDateShape
    a sh:NodeShape;
    sh:targetClass ceds:PersonBirthDate;    #C200376
    sh:closed true;
    sh:ignoredProperties (rdf:type rdf:id rdf:value rdfs:label);
##### Data Elements
    sh:property[
        sh:path ceds:BirthDate; #P000033
        sh:datatype xsd:date;
        sh:name "Birth Date";
        sh:description "The year, month and day on which a person was born.";
        ##### Validation Logic
        sh:minCount 1;
        sh:maxCount 1;
    ];
.

##### propery shapes for validating different race value conditions
ceds:SingleRaceValidate
    sh:path ceds:Race;
    sh:datatype xsd:string;
    sh:name "Person Demographic Race";
    sh:description "The origins of a person.  Restricted to single-select values.";
    sh:in("RaceAndEthnicityUnknown" "DemographicRaceTwoOrMoreRaces");
    sh:maxCount 1;
.

ceds:MultiRaceValidate
    sh:path ceds:Race;
    sh:datatype xsd:string;
        sh:name "Person Demographic Race";
        sh:description "The origins of a person.  Restrictd to multi-select values.";
    sh:unique true;
    sh:in("AmericanIndianOrAlaskaNative" "Asian" "BlackOrAfricanAmerican" "NativeHawaiianOrOtherPacificIslander" "White");
.

##### PersonRaceShape
ceds:PersonDemographicRaceShape
    a sh:NodeShape;
    sh:targetClass ceds:PersonDemographicRace;  #C200282
    sh:closed true;
    sh:ignoredProperties (rdf:type rdf:id rdf:value rdfs:label);
    sh:xone(
        [
            sh:property ceds:SingleRaceValidate
        ]
        [
            sh:property ceds:MultiRaceValidate
        ]        
    )
.

##### Sex/Gender
ceds:PersonSexGenderShape
    a sh:NodeShape;
    sh:targetClass ceds:PersonSexGender;    #C200011
    sh:closed true;
    sh:ignoredProperties (rdf:type rdf:id rdf:value rdfs:label);
##### Data Elements
    sh:property[
        sh:path ceds:SexGender; #P600035
        sh:datatype xsd:string;
        sh:name "Person Sex Gender";
        sh:description "The concept describing the biological traits that distinguish the males and females of a species.";
        sh:in("Male" "Female" "Not selected");
    ];
.